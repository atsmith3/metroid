vendor_name = ModelSim
source_file = 1, E:/School/University of Illinois/ECE 385/ECE_385/Lab05/standard_modules.sv
source_file = 1, E:/School/University of Illinois/ECE 385/ECE_385/Lab05/8bit_multiplier_toplevel.sv
source_file = 1, E:/School/University of Illinois/ECE 385/ECE_385/Lab05/8bit_multiplier_control.sv
source_file = 1, E:/School/University of Illinois/ECE 385/ECE_385/Lab05/8bit_multiplier_adder.sv
source_file = 1, E:/School/University of Illinois/ECE 385/ECE_385/Lab05/8bit_multiplier_registers.sv
source_file = 1, E:/School/University of Illinois/ECE 385/ECE_385/Lab05/Test_Bench.sv
source_file = 1, E:/School/University of Illinois/ECE 385/ECE_385/Lab05/hexdriver.sv
design_name = Multiplier
instance = comp, \AhexU[0]~output , AhexU[0]~output, Multiplier, 1
instance = comp, \AhexU[1]~output , AhexU[1]~output, Multiplier, 1
instance = comp, \AhexU[2]~output , AhexU[2]~output, Multiplier, 1
instance = comp, \AhexU[3]~output , AhexU[3]~output, Multiplier, 1
instance = comp, \AhexU[4]~output , AhexU[4]~output, Multiplier, 1
instance = comp, \AhexU[5]~output , AhexU[5]~output, Multiplier, 1
instance = comp, \AhexU[6]~output , AhexU[6]~output, Multiplier, 1
instance = comp, \AhexL[0]~output , AhexL[0]~output, Multiplier, 1
instance = comp, \AhexL[1]~output , AhexL[1]~output, Multiplier, 1
instance = comp, \AhexL[2]~output , AhexL[2]~output, Multiplier, 1
instance = comp, \AhexL[3]~output , AhexL[3]~output, Multiplier, 1
instance = comp, \AhexL[4]~output , AhexL[4]~output, Multiplier, 1
instance = comp, \AhexL[5]~output , AhexL[5]~output, Multiplier, 1
instance = comp, \AhexL[6]~output , AhexL[6]~output, Multiplier, 1
instance = comp, \BhexU[0]~output , BhexU[0]~output, Multiplier, 1
instance = comp, \BhexU[1]~output , BhexU[1]~output, Multiplier, 1
instance = comp, \BhexU[2]~output , BhexU[2]~output, Multiplier, 1
instance = comp, \BhexU[3]~output , BhexU[3]~output, Multiplier, 1
instance = comp, \BhexU[4]~output , BhexU[4]~output, Multiplier, 1
instance = comp, \BhexU[5]~output , BhexU[5]~output, Multiplier, 1
instance = comp, \BhexU[6]~output , BhexU[6]~output, Multiplier, 1
instance = comp, \BhexL[0]~output , BhexL[0]~output, Multiplier, 1
instance = comp, \BhexL[1]~output , BhexL[1]~output, Multiplier, 1
instance = comp, \BhexL[2]~output , BhexL[2]~output, Multiplier, 1
instance = comp, \BhexL[3]~output , BhexL[3]~output, Multiplier, 1
instance = comp, \BhexL[4]~output , BhexL[4]~output, Multiplier, 1
instance = comp, \BhexL[5]~output , BhexL[5]~output, Multiplier, 1
instance = comp, \BhexL[6]~output , BhexL[6]~output, Multiplier, 1
instance = comp, \Aval[0]~output , Aval[0]~output, Multiplier, 1
instance = comp, \Aval[1]~output , Aval[1]~output, Multiplier, 1
instance = comp, \Aval[2]~output , Aval[2]~output, Multiplier, 1
instance = comp, \Aval[3]~output , Aval[3]~output, Multiplier, 1
instance = comp, \Aval[4]~output , Aval[4]~output, Multiplier, 1
instance = comp, \Aval[5]~output , Aval[5]~output, Multiplier, 1
instance = comp, \Aval[6]~output , Aval[6]~output, Multiplier, 1
instance = comp, \Aval[7]~output , Aval[7]~output, Multiplier, 1
instance = comp, \Bval[0]~output , Bval[0]~output, Multiplier, 1
instance = comp, \Bval[1]~output , Bval[1]~output, Multiplier, 1
instance = comp, \Bval[2]~output , Bval[2]~output, Multiplier, 1
instance = comp, \Bval[3]~output , Bval[3]~output, Multiplier, 1
instance = comp, \Bval[4]~output , Bval[4]~output, Multiplier, 1
instance = comp, \Bval[5]~output , Bval[5]~output, Multiplier, 1
instance = comp, \Bval[6]~output , Bval[6]~output, Multiplier, 1
instance = comp, \Bval[7]~output , Bval[7]~output, Multiplier, 1
instance = comp, \X~output , X~output, Multiplier, 1
instance = comp, \Clk~input , Clk~input, Multiplier, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, Multiplier, 1
instance = comp, \Run~input , Run~input, Multiplier, 1
instance = comp, \Reset~input , Reset~input, Multiplier, 1
instance = comp, \LogicUnit|CurrentState~24 , LogicUnit|CurrentState~24, Multiplier, 1
instance = comp, \LogicUnit|CurrentState.WAIT , LogicUnit|CurrentState.WAIT, Multiplier, 1
instance = comp, \LogicUnit|CurrentState~23 , LogicUnit|CurrentState~23, Multiplier, 1
instance = comp, \LogicUnit|CurrentState.A , LogicUnit|CurrentState.A, Multiplier, 1
instance = comp, \LogicUnit|CurrentState~22 , LogicUnit|CurrentState~22, Multiplier, 1
instance = comp, \LogicUnit|CurrentState.B , LogicUnit|CurrentState.B, Multiplier, 1
instance = comp, \LogicUnit|CurrentState~21 , LogicUnit|CurrentState~21, Multiplier, 1
instance = comp, \LogicUnit|CurrentState.C , LogicUnit|CurrentState.C, Multiplier, 1
instance = comp, \LogicUnit|CurrentState~20 , LogicUnit|CurrentState~20, Multiplier, 1
instance = comp, \LogicUnit|CurrentState.D , LogicUnit|CurrentState.D, Multiplier, 1
instance = comp, \LogicUnit|CurrentState~19 , LogicUnit|CurrentState~19, Multiplier, 1
instance = comp, \LogicUnit|CurrentState.E , LogicUnit|CurrentState.E, Multiplier, 1
instance = comp, \LogicUnit|CurrentState~18 , LogicUnit|CurrentState~18, Multiplier, 1
instance = comp, \LogicUnit|CurrentState.F , LogicUnit|CurrentState.F, Multiplier, 1
instance = comp, \LogicUnit|CurrentState~17 , LogicUnit|CurrentState~17, Multiplier, 1
instance = comp, \LogicUnit|CurrentState.G , LogicUnit|CurrentState.G, Multiplier, 1
instance = comp, \LogicUnit|CurrentState~16 , LogicUnit|CurrentState~16, Multiplier, 1
instance = comp, \LogicUnit|CurrentState.H , LogicUnit|CurrentState.H, Multiplier, 1
instance = comp, \LogicUnit|PreviousState.H , LogicUnit|PreviousState.H, Multiplier, 1
instance = comp, \Switches[5]~input , Switches[5]~input, Multiplier, 1
instance = comp, \Switches[1]~input , Switches[1]~input, Multiplier, 1
instance = comp, \Switches[2]~input , Switches[2]~input, Multiplier, 1
instance = comp, \Switches[3]~input , Switches[3]~input, Multiplier, 1
instance = comp, \Switches[0]~input , Switches[0]~input, Multiplier, 1
instance = comp, \AdderUnit|AC0|FA3|c~0 , AdderUnit|AC0|FA3|c~0, Multiplier, 1
instance = comp, \Switches[4]~input , Switches[4]~input, Multiplier, 1
instance = comp, \AdderUnit|comb_11|F5|Mux0~0 , AdderUnit|comb_11|F5|Mux0~0, Multiplier, 1
instance = comp, \AdderUnit|AC0|FA2|c~0 , AdderUnit|AC0|FA2|c~0, Multiplier, 1
instance = comp, \AdderUnit|comb_11|F2|Mux0~0 , AdderUnit|comb_11|F2|Mux0~0, Multiplier, 1
instance = comp, \AdderUnit|FFA0|FA0|s~0 , AdderUnit|FFA0|FA0|s~0, Multiplier, 1
instance = comp, \RegisterUnit|RegA|DataOut[0] , RegisterUnit|RegA|DataOut[0], Multiplier, 1
instance = comp, \AdderUnit|comb_11|F0|Mux0~0 , AdderUnit|comb_11|F0|Mux0~0, Multiplier, 1
instance = comp, \AdderUnit|comb_11|F1|Mux0~0 , AdderUnit|comb_11|F1|Mux0~0, Multiplier, 1
instance = comp, \AdderUnit|FFA0|FA1|s , AdderUnit|FFA0|FA1|s, Multiplier, 1
instance = comp, \RegisterUnit|RegA|DataOut[1] , RegisterUnit|RegA|DataOut[1], Multiplier, 1
instance = comp, \AdderUnit|FFA0|FA1|c~0 , AdderUnit|FFA0|FA1|c~0, Multiplier, 1
instance = comp, \AdderUnit|FFA0|FA2|s , AdderUnit|FFA0|FA2|s, Multiplier, 1
instance = comp, \RegisterUnit|RegA|DataOut[2] , RegisterUnit|RegA|DataOut[2], Multiplier, 1
instance = comp, \AdderUnit|comb_11|F2|Mux0~1 , AdderUnit|comb_11|F2|Mux0~1, Multiplier, 1
instance = comp, \AdderUnit|FFA0|FA3|s~0 , AdderUnit|FFA0|FA3|s~0, Multiplier, 1
instance = comp, \AdderUnit|FFA0|FA3|s , AdderUnit|FFA0|FA3|s, Multiplier, 1
instance = comp, \RegisterUnit|RegA|DataOut[3] , RegisterUnit|RegA|DataOut[3], Multiplier, 1
instance = comp, \AdderUnit|FFA0|FA3|c~0 , AdderUnit|FFA0|FA3|c~0, Multiplier, 1
instance = comp, \AdderUnit|FFA0|FA3|c~1 , AdderUnit|FFA0|FA3|c~1, Multiplier, 1
instance = comp, \AdderUnit|FFA0|FA3|c~2 , AdderUnit|FFA0|FA3|c~2, Multiplier, 1
instance = comp, \AdderUnit|FFA1|FA0|s , AdderUnit|FFA1|FA0|s, Multiplier, 1
instance = comp, \RegisterUnit|RegA|DataOut[4] , RegisterUnit|RegA|DataOut[4], Multiplier, 1
instance = comp, \AdderUnit|comb_11|F4|Mux0~0 , AdderUnit|comb_11|F4|Mux0~0, Multiplier, 1
instance = comp, \AdderUnit|FFA1|FA0|c~0 , AdderUnit|FFA1|FA0|c~0, Multiplier, 1
instance = comp, \AdderUnit|FFA1|FA1|s , AdderUnit|FFA1|FA1|s, Multiplier, 1
instance = comp, \RegisterUnit|RegA|DataOut[5] , RegisterUnit|RegA|DataOut[5], Multiplier, 1
instance = comp, \AdderUnit|AC1|FA1|c~0 , AdderUnit|AC1|FA1|c~0, Multiplier, 1
instance = comp, \Switches[6]~input , Switches[6]~input, Multiplier, 1
instance = comp, \AdderUnit|comb_11|F6|Mux0~0 , AdderUnit|comb_11|F6|Mux0~0, Multiplier, 1
instance = comp, \AdderUnit|FFA1|FA1|c~0 , AdderUnit|FFA1|FA1|c~0, Multiplier, 1
instance = comp, \AdderUnit|FFA1|FA2|s , AdderUnit|FFA1|FA2|s, Multiplier, 1
instance = comp, \RegisterUnit|RegA|DataOut[6] , RegisterUnit|RegA|DataOut[6], Multiplier, 1
instance = comp, \Switches[7]~input , Switches[7]~input, Multiplier, 1
instance = comp, \AdderUnit|AC1|FA3|s , AdderUnit|AC1|FA3|s, Multiplier, 1
instance = comp, \AdderUnit|FFA1|FA3|s~0 , AdderUnit|FFA1|FA3|s~0, Multiplier, 1
instance = comp, \AdderUnit|FFA1|FA3|s , AdderUnit|FFA1|FA3|s, Multiplier, 1
instance = comp, \RegisterUnit|RegA|DataOut[7] , RegisterUnit|RegA|DataOut[7], Multiplier, 1
instance = comp, \AUpper|WideOr6~0 , AUpper|WideOr6~0, Multiplier, 1
instance = comp, \AUpper|WideOr5~0 , AUpper|WideOr5~0, Multiplier, 1
instance = comp, \AUpper|WideOr4~0 , AUpper|WideOr4~0, Multiplier, 1
instance = comp, \AUpper|WideOr3~0 , AUpper|WideOr3~0, Multiplier, 1
instance = comp, \AUpper|WideOr2~0 , AUpper|WideOr2~0, Multiplier, 1
instance = comp, \AUpper|WideOr1~0 , AUpper|WideOr1~0, Multiplier, 1
instance = comp, \AUpper|WideOr0~0 , AUpper|WideOr0~0, Multiplier, 1
instance = comp, \ALower|WideOr6~0 , ALower|WideOr6~0, Multiplier, 1
instance = comp, \ALower|WideOr5~0 , ALower|WideOr5~0, Multiplier, 1
instance = comp, \ALower|WideOr4~0 , ALower|WideOr4~0, Multiplier, 1
instance = comp, \ALower|WideOr3~0 , ALower|WideOr3~0, Multiplier, 1
instance = comp, \ALower|WideOr2~0 , ALower|WideOr2~0, Multiplier, 1
instance = comp, \ALower|WideOr1~0 , ALower|WideOr1~0, Multiplier, 1
instance = comp, \ALower|WideOr0~0 , ALower|WideOr0~0, Multiplier, 1
instance = comp, \AdderUnit|FFA1|FA2|c~0 , AdderUnit|FFA1|FA2|c~0, Multiplier, 1
instance = comp, \AdderUnit|FFA1|FA3|c~0 , AdderUnit|FFA1|FA3|c~0, Multiplier, 1
instance = comp, \ClearA_LoadB~input , ClearA_LoadB~input, Multiplier, 1
